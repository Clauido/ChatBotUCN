services:
  db-vector:
    container_name: ucenin-pgvector
    image: pgvector/pgvector:pg16
    restart: unless-stopped
    ports: #Only for dev!
      - "${PGV_PORT}:5432"
    volumes:
      - ./Database/dump.sql:/docker-entrypoint-initdb.d/init_pgvector.sql
      # - db-vector:/var/lib/postgresql/data #ver como lo haremos en producci√≥n para este

    environment:
      POSTGRES_USER: "${PGV_USER}"
      POSTGRES_PASSWORD: "${PGV_PASSWORD}" #Change me!
      POSTGRES_DB: "${PGV_DATABASE_NAME}"

  api:
    container_name: ucenin-api
    build:
      context: ./api
      dockerfile: dockerfile
    restart: unless-stopped
    ports:
      - "${API_PORT}:8000"
    environment:
      PGV_USER: "${PGV_USER}"
      PGV_PASSWORD: "${PGV_PASSWORD}" #Match password!
      PGV_HOST: "${PGV_HOST}"
      PGV_PORT: "${PGV_PORT}"
      PGV_DATABASE_NAME: "${PGV_DATABASE_NAME}"
      EMBEDDING_MODEL: "${EMBEDDING_MODEL}"
      UCN_MODEL_NAME: "${UCN_MODEL_NAME}"
      OLLAMA_PORT: ${OLLAMA_PORT}
      OLLAMA_HOST: ${OLLAMA_HOST}
    depends_on:
      - db-vector

  model:
    container_name: ucenin-ollama
    build:
      context: ./model
      dockerfile: dockerfile
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    ports:
      - "${OLLAMA_PORT}:11434" #Only for dev

  frontend:
    container_name: ucenin-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
    depends_on:
      - db-vector
      - api
      - model

# volumes:
#   db-vector:
#     name: ucenin-db-vector
